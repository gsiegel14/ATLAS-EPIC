name: Epic FHIR Integration CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: 3.8
        cache: 'pip'
    
    - name: Set up Java 11
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'
        cache: 'maven'
    
    - name: Use Java 11
      run: source ops/java/use_java11.sh || echo "Could not source script, using GitHub Actions Java setup"
    
    - name: Check Java version
      run: java -version
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Cache Docker images
      uses: actions/cache@v3
      with:
        path: /tmp/docker-cache
        key: ${{ runner.os }}-docker-${{ hashFiles('ops/validator/Dockerfile', 'ops/pathling/Dockerfile') }}
        restore-keys: |
          ${{ runner.os }}-docker-
    
    - name: Build validator image
      uses: docker/build-push-action@v4
      with:
        context: ./ops/validator
        push: false
        tags: fhir-validator:latest
        cache-from: type=local,src=/tmp/docker-cache
        cache-to: type=local,dest=/tmp/docker-cache
        outputs: type=docker,dest=/tmp/validator.tar
    
    - name: Build Pathling image
      uses: docker/build-push-action@v4
      with:
        context: ./ops/pathling
        push: false
        tags: epic-pathling:latest
        cache-from: type=local,src=/tmp/docker-cache
        cache-to: type=local,dest=/tmp/docker-cache
        outputs: type=docker,dest=/tmp/pathling.tar
    
    - name: Load Docker images
      run: |
        docker load --input /tmp/validator.tar
        docker load --input /tmp/pathling.tar
    
    - name: Run tests
      run: |
        pytest
    
    - name: Run E2E test
      run: |
        python scripts/advanced_fhir_tools_e2e_test.py --debug
    
    - name: Fail if sentinel exists
      run: test ! -f /tmp/fhir_e2e_failed 

  build-foundry:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Build Python wheel
        run: |
          pip install build
          python -m build --wheel --outdir dist/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Foundry image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ops/foundry/Dockerfile
          push: false
          tags: epic-fhir-foundry:latest
          outputs: type=docker,dest=/tmp/foundry.tar

      - name: Compress image for artifact upload
        run: gzip -c /tmp/foundry.tar > epic-fhir-foundry.tar.gz

      - uses: actions/upload-artifact@v3
        with:
          name: foundry-image
          path: epic-fhir-foundry.tar.gz 